syntax = "proto3";

package side.btclightclient;

import "gogoproto/gogo.proto";
import "side/btclightclient/params.proto";
import "side/btclightclient/bitcoin.proto";

option go_package = "github.com/sideprotocol/side/x/btclightclient/types";

// Msg defines the Msg service.
service Msg {
  // SubmitBlockHeaders submits bitcoin block headers to the side chain.
  rpc SubmitBlockHeaders (MsgSubmitBlockHeaderRequest) returns (MsgSubmitBlockHeadersResponse);
  // SubmitTransaction submits bitcoin transaction to the side chain.
  rpc SubmitTransaction (MsgSubmitTransactionRequest) returns (MsgSubmitTransactionResponse);
  // UpdateSenders updates the senders of the side chain.
  rpc UpdateSenders (MsgUpdateSendersRequest) returns (MsgUpdateSendersResponse);
  // WithdrawBitcoin withdraws the bitcoin from the side chain.
  rpc WithdrawBitcoin (MsgWithdrawBitcoinRequest) returns (MsgWithdrawBitcoinResponse);
  // SubmitWithdrawSignatures submits the signatures of the withdraw transaction.
  rpc SubmitWithdrawSignatures (MsgSubmitWithdrawSignaturesRequest) returns (MsgSubmitWithdrawSignaturesResponse);
}

// MsgBlockHeaderRequest defines the Msg/SubmitBlockHeaders request type.
message MsgSubmitBlockHeaderRequest {
  string sender = 1;
  repeated BlockHeader block_headers = 2;
}

// MsgSubmitBlockHeadersResponse defines the Msg/SubmitBlockHeaders response type.
message MsgSubmitBlockHeadersResponse {
}

// MsgSubmitTransactionRequest defines the Msg/SubmitTransaction request type.
message MsgSubmitTransactionRequest {
  string sender = 1;
  string blockhash = 2;
  // the tx bytes in base64 format
  // used for parsing the sender of the transaction
  string prev_tx_bytes = 3;
  // the tx bytes in base64 format
  string tx_bytes = 4;
  repeated string proof = 5;
}

// MsgSubmitTransactionResponse defines the Msg/SubmitTransaction response type.
message MsgSubmitTransactionResponse {
}

// Msg defines the MsgUpdateSender service.
message MsgUpdateSendersRequest {
  string sender = 1;
  // update senders who can send block headers to the side chain
  repeated string senders = 2;
}

// MsgUpdateSenderResponse defines the Msg/UpdateSender response type.
message MsgUpdateSendersResponse {
}

// MsgWithdrawBitcoinRequest defines the Msg/WithdrawBitcoin request type.
message MsgWithdrawBitcoinRequest {
  string sender = 1;
  // withdraw amount in satoshi, etc: 100000000sat = 1btc
  string amount = 2;
}

// MsgWithdrawBitcoinResponse defines the Msg/WithdrawBitcoin response type.
message MsgWithdrawBitcoinResponse {
}

// MsgSubmitWithdrawSignaturesRequest defines the Msg/SubmitWithdrawSignatures request type.
message MsgSubmitWithdrawSignaturesRequest {
  string sender = 1;
  string txid = 2;
  repeated string signatures = 3;
}

// MsgSubmitWithdrawSignaturesResponse defines the Msg/SubmitWithdrawSignatures response type.
message MsgSubmitWithdrawSignaturesResponse {
}

