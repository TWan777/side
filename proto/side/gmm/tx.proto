syntax = "proto3";

package side.gmm;

option go_package = "github.com/sideprotocol/side/x/gmm/types";

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "side/gmm/pool_params.proto";
import "side/gmm/pool_asset.proto";

// Msg defines the Msg service.
service Msg {
  rpc CreatePool   (MsgCreatePool  ) returns (MsgCreatePoolResponse  );
  rpc AddLiquidity (MsgAddLiquidity) returns (MsgAddLiquidityResponse);
  rpc Withdraw     (MsgWithdraw    ) returns (MsgWithdrawResponse    );
  rpc Swap         (MsgSwap        ) returns (MsgSwapResponse        );

}
message MsgCreatePool {
           string     sender   = 1;
           PoolParams params    = 2;
  repeated PoolAsset  liquidity = 3 [(gogoproto.nullable) = false];
}

message MsgCreatePoolResponse {
  string pool_id = 1;
}

message MsgAddLiquidity {
           string                   sender   = 1;
           string                   pool_id   = 2;
  repeated cosmos.base.v1beta1.Coin liquidity = 3 [(gogoproto.nullable) = false];
}

message MsgAddLiquidityResponse {
  string pool_id = 1;
}

message MsgWithdraw {
  string sender = 1;
  string receiver = 2;
  string pool_id = 3;
  cosmos.base.v1beta1.Coin share = 4 [(gogoproto.nullable) = false];
}

message MsgWithdrawResponse {
  cosmos.base.v1beta1.Coin share = 1 [(gogoproto.nullable) = false];
}

message MsgSwap {
  string sender = 1;
  string pool_id = 2;
  cosmos.base.v1beta1.Coin tokenIn = 3 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin tokenOut = 4 [(gogoproto.nullable) = false];
  string slippage = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ]; 
}

message MsgSwapResponse {
  string                   pool_id = 1;
  cosmos.base.v1beta1.Coin tokenIn = 2 [(gogoproto.nullable) = false];

}

