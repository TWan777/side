syntax = "proto3";
package side.gmm;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "side/gmm/params.proto";
import "side/gmm/pool.proto"; 

option go_package = "github.com/sideprotocol/side/x/gmm/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sideprotocol/side/gmm/params";
  }
  rpc Pools    (QueryAllPoolsRequest) returns (QueryPoolsResponse) {
    option (google.api.http).get = "/sideprotocol/side/gmm/all";
  }

  rpc MyPools    (QueryPoolsRequest) returns (QueryPoolsResponse) {
    option (google.api.http).get = "/sideprotocol/side/gmm/{creator}";
  }

  rpc Pool    (QueryPoolRequest) returns (QueryPoolResponse) {
    option (google.api.http).get = "/sideprotocol/side/gmm/{pool_id}";
  }


 
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryLiquidityPoolRequest is request type for the Query/Liquidity RPC method.
message QueryPoolRequest {
  string pool_id = 1;
}

// QueryLiquidityPoolResponse is response type for the Query/Liquidity RPC method
message QueryPoolResponse {
  Pool pool = 1;
}

// QueryPoolsRequest is request type for the Query/Liquidities RPC method.
message QueryAllPoolsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryPoolsRequest is request type for the Query/Liquidities RPC method.
message QueryPoolsRequest {
  string creator = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryPoolsResponse is response type for the Query/Pools RPC method
message QueryPoolsResponse {
  repeated Pool pools = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination            = 2;
}

